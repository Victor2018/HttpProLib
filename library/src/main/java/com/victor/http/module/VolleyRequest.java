package com.victor.http.module;import android.content.Context;import android.util.Log;import com.alibaba.fastjson.JSON;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.toolbox.Volley;import com.victor.http.data.HttpParm;import com.victor.http.data.Request;import com.victor.http.data.UpLoadParm;import java.util.HashMap;import java.util.List;/* * ----------------------------------------------------------------- * Copyright (C) 2018-2028, by Victor, All rights reserved. * ----------------------------------------------------------------- * File: VolleyRequest.java * Author: Victor * Date: 2018/9/6 18:25 * Description: * ----------------------------------------------------------------- */public class VolleyRequest {    private String TAG = "VolleyRequest";    private static RequestQueue mRequestQueue;    private static VolleyRequest mVolleyRequest;    private int requestMethod = Request.GET;//请求方式 默认get    private Class responseCls;//响应数据    private String mBodyContentType = HttpRequest.mDefaultBodyContentType;    private VolleyRequest() {    }    /**     * @param context ApplicationContext     */    public static void buildRequestQueue(Context context) {        mRequestQueue = Volley.newRequestQueue(context);        //... do something    }    public static VolleyRequest getInstance() {        if (mRequestQueue == null) {            return null;        }        if (mVolleyRequest == null) {            synchronized (VolleyRequest.class) {                if (mVolleyRequest == null) {                    mVolleyRequest = new VolleyRequest();                }            }        }        return mVolleyRequest;    }    /**     * 设置请求方式     */    public void setRequestMethod (int method) {        requestMethod = method;    }    /**     * 设置返回数据模型     * @param cls     */    public void setResponseCls (Class cls) {        responseCls = cls;    }    /**     * 设置请求数据格式     * @param bodyContentType     */    public void setBodyContentType (String bodyContentType) {        mBodyContentType = bodyContentType;    }    public <T> VolleyGetRequest<T> sendGetRequest (String url, HashMap<String,String> headers, String parm, Class<T> clazz, Response.Listener<T> listener,                                                   Response.ErrorListener errorListener) {        VolleyGetRequest<T> request = new VolleyGetRequest<T>(url,headers,parm,clazz,listener, errorListener);        mRequestQueue.cancelAll(request);        mRequestQueue.add(request);        return request;    }    public <T> VolleyPostRequest<T> sendPostRequest (String url, HashMap<String,String> headers, String parm, String bodyContentType, Class<T> clazz, Response.Listener<T> listener,                                                     Response.ErrorListener errorListener) {        VolleyPostRequest<T> request = new VolleyPostRequest<T>(url,headers,parm,bodyContentType,clazz,listener, errorListener);        mRequestQueue.cancelAll(request);        mRequestQueue.add(request);        return request;    }    public <T> VolleyFastJsonArrayRequest<T> newFastJsonArrayRequest (int method, String url, Class<T> clazz, Response.Listener<List<T>> listener,                                                                      Response.ErrorListener errorListener) {        VolleyFastJsonArrayRequest<T> request = new VolleyFastJsonArrayRequest<T>(method,url,clazz,listener, errorListener);        mRequestQueue.cancelAll(request);        mRequestQueue.add(request);        return request;    }    public <T> VolleyMultipartUploadRequest<T> sendMultipartUploadRequest (String url, UpLoadParm parm, Response.Listener<T> listener,                                                                           Response.ErrorListener errorListener) {        VolleyMultipartUploadRequest<T> request = new VolleyMultipartUploadRequest<T>(url,parm, HttpRequest.getInstance().responseCls,listener, errorListener);        Log.e(TAG,"request url = " + url);        Log.e(TAG,"request parm = " + JSON.toJSONString(parm));        mRequestQueue.cancelAll(request);        mRequestQueue.add(request);        return request;    }    public <T> com.android.volley.Request<T> sendRequest(HttpParm httpParm, Response.Listener<T> listener,                                      Response.ErrorListener errorListener) {        requestMethod = httpParm.requestMethod;        Log.e(TAG,"request url = " + httpParm.url);        Log.e(TAG,"request parm = " + httpParm.jsonParm);        Log.e(TAG,"request requestMethod = " + (httpParm.requestMethod == 0 ? "GET" : "POST"));        com.android.volley.Request<T> request = null;        if (httpParm.requestMethod== Request.POST) {            request = sendPostRequest(httpParm.url,httpParm.headers,httpParm.jsonParm,httpParm.bodyContentType,httpParm.responseCls,listener, errorListener);        } else if (requestMethod == Request.GET) {            request = sendGetRequest(httpParm.url,httpParm.headers,httpParm.jsonParm,httpParm.responseCls,listener,errorListener);        }        return request;    }}